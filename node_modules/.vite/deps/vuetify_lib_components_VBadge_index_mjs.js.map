{
  "version": 3,
  "sources": ["dep:vuetify_lib_components_VBadge_index_mjs", "../../vuetify/src/components/VBadge/VBadge.tsx"],
  "sourcesContent": ["\nexport * from \"./node_modules/vuetify/lib/components/VBadge/index.mjs\"", "// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useLocale } from '@/composables/locale'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, pick } from '@/util'\n\nexport const VBadge = defineComponent({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: {\n    bordered: Boolean,\n    color: String,\n    content: [Number, String],\n    dot: Boolean,\n    floating: Boolean,\n    icon: String,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    location: {\n      type: String,\n      default: 'top-end',\n      validator: (value: string) => {\n        const [vertical, horizontal] = (value ?? '').split('-')\n\n        return (\n          ['top', 'bottom'].includes(vertical) &&\n          ['start', 'end'].includes(horizontal)\n        )\n      },\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    textColor: String,\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  },\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { isRtl } = useRtl()\n    const { roundedClasses } = useRounded(props)\n    const { t } = useLocale()\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n    const { themeClasses } = useTheme()\n\n    const position = computed(() => {\n      return props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n    })\n\n    function calculatePosition (offset?: number | string) {\n      return `calc(100% - ${convertToUnit(position.value + parseInt(offset ?? 0, 10))})`\n    }\n\n    const locationStyles = computed(() => {\n      const [vertical, horizontal] = (props.location ?? '').split('-')\n\n      const styles = {\n        bottom: 'auto',\n        left: 'auto',\n        right: 'auto',\n        top: 'auto',\n      }\n\n      if (!props.inline) {\n        const isRight = (isRtl.value && horizontal === 'end') || (!isRtl.value && horizontal === 'start')\n\n        styles[isRight ? 'right' : 'left'] = calculatePosition(props.offsetX)\n        styles[vertical === 'top' ? 'bottom' : 'top'] = calculatePosition(props.offsetY)\n      }\n\n      return styles\n    })\n\n    return () => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= props.max ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pick(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n          ]}\n          { ...attrs }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                  themeClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  locationStyles.value,\n                  textColorStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label={ t(props.label, value) }\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={props.icon} />\n                  : <span class=\"v-badge__content\">{content}</span>\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n"],
  "mappings": "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",
  "names": []
}
