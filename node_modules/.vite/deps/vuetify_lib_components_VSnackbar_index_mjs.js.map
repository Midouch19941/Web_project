{
  "version": 3,
  "sources": ["dep:vuetify_lib_components_VSnackbar_index_mjs", "../../vuetify/src/components/VSnackbar/VSnackbar.tsx"],
  "sourcesContent": ["\nexport * from \"./node_modules/vuetify/lib/components/VSnackbar/index.mjs\"", "// Styles\nimport './VSnackbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { onMounted, watch } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport const VSnackbar = defineComponent({\n  name: 'VSnackbar',\n\n  props: {\n    app: Boolean,\n    centered: Boolean,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n    multiLine: Boolean,\n    timeout: {\n      type: [Number, String],\n      default: 5000,\n    },\n    vertical: Boolean,\n\n    modelValue: Boolean,\n\n    ...makePositionProps(),\n    ...makeVariantProps(),\n    ...makeTransitionProps({ transition: 'v-snackbar-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (v: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { positionClasses, positionStyles } = usePosition(props)\n\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n\n    watch(isActive, startTimeout)\n    watch(() => props.timeout, startTimeout)\n\n    onMounted(() => {\n      if (isActive.value) startTimeout()\n    })\n\n    let activeTimeout = -1\n    function startTimeout () {\n      window.clearTimeout(activeTimeout)\n      const timeout = Number(props.timeout)\n\n      if (!isActive.value || timeout === -1) return\n\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false\n      }, timeout)\n    }\n\n    function onPointerenter () {\n      window.clearTimeout(activeTimeout)\n    }\n\n    useRender(() => (\n      <VOverlay\n        v-model={ isActive.value }\n        class={[\n          'v-snackbar',\n          {\n            'v-snackbar--active': isActive.value,\n            'v-snackbar--bottom': props.bottom || !props.top,\n            'v-snackbar--centered': props.centered,\n            'v-snackbar--end': props.right,\n            'v-snackbar--multi-line': props.multiLine && !props.vertical,\n            'v-snackbar--start': props.left,\n            'v-snackbar--top': props.top,\n            'v-snackbar--vertical': props.vertical,\n          },\n          positionClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          positionStyles.value,\n        ]}\n        persistent\n        noClickAnimation\n        scrim={ false }\n        scrollStrategy=\"none\"\n        transition={ props.transition }\n        v-slots={{ activator: slots.activator }}\n      >\n        <div\n          class={[\n            'v-snackbar__wrapper',\n            colorClasses.value,\n            variantClasses.value,\n          ]}\n          onPointerenter={ onPointerenter }\n          onPointerleave={ startTimeout }\n        >\n          { genOverlays(false, 'v-snackbar') }\n\n          { slots.default && (\n            <div\n              class={[\n                'v-snackbar__content',\n                props.contentClass,\n              ]}\n              role=\"status\"\n              aria-live=\"polite\"\n            >\n              { slots.default?.() }\n            </div>\n          ) }\n\n          { slots.actions && (\n            <VDefaultsProvider\n              defaults={{\n                VBtn: {\n                  variant: 'text',\n                  ripple: false,\n                },\n              }}\n            >\n              <div class=\"v-snackbar__actions\">\n                { slots.actions?.() }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </div>\n      </VOverlay>\n    ))\n  },\n})\n\nexport type VSnackbar = InstanceType<typeof VSnackbar>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;ACCA;AAgBO,IAAM,YAAY,gBAAgB;EACvC,MAAM;EAEN,OAAO;IACL,KAAK;IACL,UAAU;IACV,cAAc;MACZ,MAAM;MACN,SAAS;IAFG;IAId,WAAW;IACX,SAAS;MACP,MAAM,CAAC,QAAQ,MAAT;MACN,SAAS;IAFF;IAIT,UAAU;IAEV,YAAY;KAET,kBAAiB,IACjB,iBAAgB,IAChB,oBAAoB;IAAE,YAAY;EAAd,CAAD;EAGxB,OAAO;IACL,qBAAsB,OAAe;EADhC;EAIP,MAAO,OAAF,MAAoB;AAAA,QAAX;MAAE;QAAS;AACvB,UAAM,WAAW,gBAAgB,OAAO,YAAR;AAChC,UAAM;MAAE;MAAiB;QAAmB,YAAY,KAAD;AAEvD,UAAM;MAAE;MAAc;MAAa;QAAmB,WAAW,KAAD;AAEhE,UAAM,UAAU,YAAX;AACL,UAAM,MAAM,MAAM,SAAS,YAAtB;AAEL,cAAU,MAAM;AACd,UAAI,SAAS;AAAO,qBAAY;IACjC,CAFQ;AAIT,QAAI,gBAAgB;AACpB,4BAAyB;AACvB,aAAO,aAAa,aAApB;AACA,YAAM,UAAU,OAAO,MAAM,OAAP;AAEtB,UAAI,CAAC,SAAS,SAAS,YAAY;AAAI;AAEvC,sBAAgB,OAAO,WAAW,MAAM;AACtC,iBAAS,QAAQ;MAClB,GAAE,OAFa;IAGjB;AAED,8BAA2B;AACzB,aAAO,aAAa,aAApB;IACD;AAED,cAAU,MAAA;AAAA,UAAA,gBAAA;AAAA,aAAA,YAAA,UAAA;QAAA,cAEI,SAAS;QAFb,uBAAA,YAEI,SAAS,QAFb;QAAA,SAGC,CACL,cACA;UACE,sBAAsB,SAAS;UAC/B,sBAAsB,MAAM,UAAU,CAAC,MAAM;UAC7C,wBAAwB,MAAM;UAC9B,mBAAmB,MAAM;UACzB,0BAA0B,MAAM,aAAa,CAAC,MAAM;UACpD,qBAAqB,MAAM;UAC3B,mBAAmB,MAAM;UACzB,wBAAwB,MAAM;QARhC,GAUA,gBAAgB,KAZX;QAHD,SAiBC,CACL,YAAY,OACZ,eAAe,KAFV;QAjBD,cAAA;QAAA,oBAAA;QAAA,SAuBE;QAvBF,kBAwBS;QAxBT,cAyBO,MAAM;MAzBb,GAAA;QAAA,SAAA,MAAA,CAAA,YAAA,OAAA;UAAA,SA6BG,CACL,uBACA,aAAa,OACb,eAAe,KAHV;UA7BH,kBAkCa;UAlCb,kBAmCa;QAnCb,GAAA,CAqCF,YAAY,OAAO,YAAR,GAEX,MAAM,WAAN,YAAA,OAAA;UAAA,SAES,CACL,uBACA,MAAM,YAFD;UAFT,QAMO;UANP,aAOY;QAPZ,GAAA,CAAA,kBASI,MAAM,YATV,OAAA,SASI,eAAA,KAAA,KAAK,CATT,CAAA,GAaA,MAAM,WAAN,YAAA,mBAAA;UAAA,YAEY;YACR,MAAM;cACJ,SAAS;cACT,QAAQ;YAFJ;UADE;QAFZ,GAAA;UAAA,SAAA,MAAA,CAAA,YAAA,OAAA;YAAA,SASa;UATb,GAAA,CAAA,kBAUM,MAAM,YAVZ,OAAA,SAUM,eAAA,KAAA,KAAK,CAVX,CAAA,CAAA;QAAA,CAAA,CApDE,CAAA,CAAA;QA0BK,WAAW,MAAM;MA1BtB,CAAA;IAAA,CAAD;EAqEV;AA9HsC,CAAD;",
  "names": []
}
