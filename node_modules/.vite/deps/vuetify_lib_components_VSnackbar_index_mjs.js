import {
  VOverlay
} from "./chunk-M5JBXWB6.js";
import "./chunk-RLGXE5Z7.js";
import "./chunk-K3F4HPYD.js";
import {
  VDefaultsProvider
} from "./chunk-7MO5DD47.js";
import {
  makeTransitionProps
} from "./chunk-HFUZXYFA.js";
import {
  genOverlays,
  makeVariantProps,
  useVariant
} from "./chunk-4QT6SWAU.js";
import "./chunk-GJUIDGFM.js";
import {
  useProxiedModel
} from "./chunk-HHNAWU4B.js";
import {
  makePositionProps,
  usePosition
} from "./chunk-4CCEQVVP.js";
import "./chunk-DEMBA73I.js";
import "./chunk-MHPOZZQY.js";
import "./chunk-PMJZUFQ6.js";
import {
  defineComponent,
  useRender
} from "./chunk-4GFONREX.js";
import {
  createVNode,
  onMounted,
  watch
} from "./chunk-OY7IASPU.js";
import {
  __spreadValues,
  init_define_process_env
} from "./chunk-G7U5YDWW.js";

// dep:vuetify_lib_components_VSnackbar_index_mjs
init_define_process_env();

// node_modules/vuetify/lib/components/VSnackbar/index.mjs
init_define_process_env();

// node_modules/vuetify/lib/components/VSnackbar/VSnackbar.mjs
init_define_process_env();
import "C:/Users/medme/OneDrive/Bureau/Projet paresseux/front-end/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.css";
var VSnackbar = defineComponent({
  name: "VSnackbar",
  props: __spreadValues(__spreadValues(__spreadValues({
    app: Boolean,
    centered: Boolean,
    contentClass: {
      type: String,
      default: ""
    },
    multiLine: Boolean,
    timeout: {
      type: [Number, String],
      default: 5e3
    },
    vertical: Boolean,
    modelValue: Boolean
  }, makePositionProps()), makeVariantProps()), makeTransitionProps({
    transition: "v-snackbar-transition"
  })),
  emits: {
    "update:modelValue": (v) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const isActive = useProxiedModel(props, "modelValue");
    const {
      positionClasses,
      positionStyles
    } = usePosition(props);
    const {
      colorClasses,
      colorStyles,
      variantClasses
    } = useVariant(props);
    watch(isActive, startTimeout);
    watch(() => props.timeout, startTimeout);
    onMounted(() => {
      if (isActive.value)
        startTimeout();
    });
    let activeTimeout = -1;
    function startTimeout() {
      window.clearTimeout(activeTimeout);
      const timeout = Number(props.timeout);
      if (!isActive.value || timeout === -1)
        return;
      activeTimeout = window.setTimeout(() => {
        isActive.value = false;
      }, timeout);
    }
    function onPointerenter() {
      window.clearTimeout(activeTimeout);
    }
    useRender(() => {
      var _slots$default, _slots$actions;
      return createVNode(VOverlay, {
        "modelValue": isActive.value,
        "onUpdate:modelValue": ($event) => isActive.value = $event,
        "class": ["v-snackbar", {
          "v-snackbar--active": isActive.value,
          "v-snackbar--bottom": props.bottom || !props.top,
          "v-snackbar--centered": props.centered,
          "v-snackbar--end": props.right,
          "v-snackbar--multi-line": props.multiLine && !props.vertical,
          "v-snackbar--start": props.left,
          "v-snackbar--top": props.top,
          "v-snackbar--vertical": props.vertical
        }, positionClasses.value],
        "style": [colorStyles.value, positionStyles.value],
        "persistent": true,
        "noClickAnimation": true,
        "scrim": false,
        "scrollStrategy": "none",
        "transition": props.transition
      }, {
        default: () => [createVNode("div", {
          "class": ["v-snackbar__wrapper", colorClasses.value, variantClasses.value],
          "onPointerenter": onPointerenter,
          "onPointerleave": startTimeout
        }, [genOverlays(false, "v-snackbar"), slots.default && createVNode("div", {
          "class": ["v-snackbar__content", props.contentClass],
          "role": "status",
          "aria-live": "polite"
        }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)]), slots.actions && createVNode(VDefaultsProvider, {
          "defaults": {
            VBtn: {
              variant: "text",
              ripple: false
            }
          }
        }, {
          default: () => [createVNode("div", {
            "class": "v-snackbar__actions"
          }, [(_slots$actions = slots.actions) == null ? void 0 : _slots$actions.call(slots)])]
        })])],
        activator: slots.activator
      });
    });
  }
});
export {
  VSnackbar
};
//# sourceMappingURL=vuetify_lib_components_VSnackbar_index_mjs.js.map
